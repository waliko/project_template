#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'proc'
        }
    //triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_waloid', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                    docker login -u $USERNAME -p $PASSWORD
                    '''
                }
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('docker/toolbox') {
                	sh 'docker build -t waloid/toolbox:$BRANCH_NAME-latest .'
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker tag waloid/toolbox:$BRANCH_NAME-latest waloid/toolbox:$BRANCH_NAME-$BUILD_ID && \
                docker push waloid/toolbox:$BRANCH_NAME-$BUILD_ID && \
                docker push waloid/toolbox:$BRANCH_NAME-latest
                '''
            }
        }
    }
}
